INTRODUCTION:

AGEnt is a program for identifying accessory genomic elements in
bacterial genomes by using an in-silico subtractive hybridization
approach against a core genome, such as those generated by the Spine
algorithm. See http://vfsmspineagent.fsm.northwestern.edu for more
information on Spine.

REQUIREMENTS:

- Perl 5.10 or above and File::Which module
- MUMmer version 3.22 or above (http://mummer.sourceforge.net).
Install MUMmer as directed by the instructions included with the
software.
- Mac OSX or Linux. We provide no guarantees that this will work on
Windows or other operating systems.

INSTALLATION:

Simply move the AGEnt directory to the desired location. The
"scripts" directory must remain in the same directory as AGEnt.pl

USAGE:

Basic command: perl AGEnt.pl -r core_genome.fasta -q
query_genome.fasta

For list of options, call the script without any inputs: perl
AGEnt.pl

** Required Inputs:

  -q	File of query sequence(s) in Fasta or Genbank format. If an
annotated Genbank formatted file is used, AGEnt will try to extract
CDS coordinates to separate genes into core and accessory groups.

AGEnt will try to guess what type of file you have entered based on
the suffix (Fasta if suffix is .fasta or .fa, Genbank if suffix is
.gbk or .gb). If you would like to set this manually, use the -Q
option (see below).

If a Genbank file is given, the CDS records must have "locus_id" tags
for gene information to be extracted. Some automated annotation
pipelines, such as RAST, do not add "locus_id" tags. These can be
added to your file using the online or downloadable program
gbk_reformat (see
http://vfsmspineagent.fsm.northwestern.edu/cgi-bin/gbk_reformat.cgi
for more information).

  -r    File of reference sequence(s) in Fasta or Genbank format. 

AGEnt will try to guess what type of file you have entered based on
the suffix (Fasta if suffix is .fasta or .fa, Genbank if suffix is
.gbk or .gb). If you would like to set this manually, use the -R
option (see below).

If you want to use the core genome output produced by Spine, use
the "backbone.fasta" file here.

** Optional Inputs:

  -a	Minimum overlap with accessory coordinates, in percent, for a
query gene to be called accessory. (default: 50)

  -c	Path to file containing names and coordinates of genes in the
query genome. This will output a file separating genes into core or
accessory categories ("_orfs.txt").
  
File should be in \"Glimmer\" format, i.e.
	>contig_name_1 
	orf_ID_1<space(s)>start_coordinate<space(s)>stop_coordinate
	orf_ID_2<space(s)>start_coordinate<space(s)>stop_coordinate
	>contig_name_2
	orf_ID_3<space(s)>start_coordinate<space(s)>stop_coordinate
	etc...
            
Contig names should match those in file given by option -q.
All coordinates are 1-based.
Coordinates assuming a circular contig that cross the origin will
give incorrect results.
Best if all ORF IDs are unique (i.e. don't restart count every 
contig).
If an annotated Genbank file is given as the query sequence (-q),
gene coordinates entered here will override the Genbank file
annotations.

  -l    Print license information and quit

  -m	Minimum alignment identity between query and reference to be
called core, in percent. (default: 85)

  -n	Full path to folder containing MUMmer scripts and
executables, i.e. /home/applications/MUMmer/bin (default: tries to
find MUMmer in your PATH)

  -o    Prefix for output files. (default: "output")

  -p	Prefix for output sequences. (default: same as given by
option -o)

  -Q	Manual override of query file type. Enter "F" for Fasta or
"G" for Genbank.

  -R	Manual override of reference file type. Enter "F" for Fasta
or "G" for Genbank.

  -s    Minimum size of fragments to output, in bases. (default: 10)

  -v    Print version information and quit.


OUTPUT FILES:

"non-core.key.txt"
Tab-delimited file of regions not aligning to the reference sequence
(i.e. accessory sequences).
Column descriptions:
* id: Sequence ID of each accessory sequence. Assigned by AGEnt.
* length: Length of the accessory sequence, in bases
* gc%: Percent GC content of the accessory sequence
* scaffold_parent: Name of the query sequence from which the
accessory sequence was identified (i.e. parent sequence)
* scaffold_parent_leng: Length of the parent sequence from the query,
in bases
* l_border_coord: Coordinate of the last nucleotide on the parent
sequence 5' to the accessory sequence. Coordinates are 1-based. If
this value is a "?", the accessory sequence includes the first base
in the parent sequence, so the accessory border cannot be determined.
* r_border_coord: Coordinate of the first nucleotide on the the
parent sequence 3' to the accessory sequence. Coordinates are
1-based. If this value is a "?", the accessory sequence includes the
last base in the parent sequence, so the accessory border cannot be
determined.

"non-core.fasta"
Nucleotide sequences of all identified accessory regions. Sequence
IDs are those given under the "id" header in the non-core.key.txt
file.

"orfs.txt" (if file in annotated Genbank format or ORF coordinates
were provided)
List of ORFs found within either the accessory
(non-reference-aligning) regions or core (reference-aligning)
regions. 
Column descriptions:
Column 1: Name of the parent contig
Column 2: Name of the ORF
Column 3: Percent of the ORF sequence present in the accessory
(non-reference-aligning) regions of the query genome.

LICENSE:

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  See LICENSE.txt

CONTACT:

Contact Egon Ozer (e-ozer@northwestern.edu) with questions or
comments
